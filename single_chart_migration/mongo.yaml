# Source: px-central/templates/px-backup/pxcentral-mongodb.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pxc-backup-mongodb-trial
  labels:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
    app.kubernetes.io/name: px-central
    app.kubernetes.io/instance: "px-backup"
secrets:
  - name: pxc-backup-mongodb-trial
---
# Source: px-central/templates/px-backup/pxcentral-mongodb.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
    app.kubernetes.io/name: px-central
    app.kubernetes.io/instance: "px-backup"
  name: pxc-backup-mongodb-trial
type: Opaque
stringData:
  mongodb-root-password: "pxcentral"
  mongodb-password: "Password1"
  mongodb-replica-set-key: "pxbackup"
---
# Source: px-central/templates/px-backup/pxcentral-mongodb.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pxc-backup-mongodb-trial-scripts
  labels:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
    app.kubernetes.io/name: px-central
    app.kubernetes.io/instance: "px-backup"
data:
  setup.sh: |-
    #!/bin/bash

    . /opt/bitnami/scripts/mongodb-env.sh

    echo "Advertised Hostname: $MONGODB_ADVERTISED_HOSTNAME"

    if [[ "$MY_POD_NAME" = "pxc-backup-mongodb-trial-0" ]]; then
        echo "Pod name matches initial primary pod name, configuring node as a primary"
        export MONGODB_REPLICA_SET_MODE="primary"
    else
        echo "Pod name doesn't match initial primary pod name, configuring node as a secondary"
        export MONGODB_REPLICA_SET_MODE="secondary"
        export MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD="$MONGODB_ROOT_PASSWORD"
        export MONGODB_INITIAL_PRIMARY_PORT_NUMBER="$MONGODB_PORT_NUMBER"
        export MONGODB_ROOT_PASSWORD="" MONGODB_USERNAME="" MONGODB_DATABASE="" MONGODB_PASSWORD=""
    fi

    exec /opt/bitnami/scripts/mongodb/entrypoint.sh /opt/bitnami/scripts/mongodb/run.sh
---
# Source: px-central/templates/px-backup/pxcentral-mongodb.yaml
apiVersion: v1
kind: Service
metadata:
  name: pxc-backup-mongodb-trial-headless
  labels:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
    app.kubernetes.io/name: px-central
    app.kubernetes.io/instance: "px-backup"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
  selector:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
---
# Source: px-central/templates/px-backup/pxcentral-mongodb.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pxc-backup-mongodb-trial
  labels:
    app.kubernetes.io/component: pxc-backup-mongodb-trial
    app.kubernetes.io/name: px-central
    app.kubernetes.io/instance: "px-backup"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: px-backup
      app.kubernetes.io/instance: px-backup
      app.kubernetes.io/component: pxc-backup-mongodb-trial
  serviceName: pxc-backup-mongodb-trial-headless
  podManagementPolicy: OrderedReady
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: px-backup
        app.kubernetes.io/instance: px-backup
        app.kubernetes.io/component: pxc-backup-mongodb-trial
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pxbackup/enabled
                operator: NotIn
                values:
                - "false"
      imagePullSecrets:
        - name: "docregistry-secret"
      serviceAccountName: pxc-backup-mongodb-trial
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.4-debian-10-r30
          imagePullPolicy: Always
          command:
            - /scripts/setup.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: pxc-backup-mongodb-trial-headless
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: pxc-backup-mongodb-trial-0.$(K8S_SERVICE_NAME)
            - name: MONGODB_REPLICA_SET_NAME
              value: rs0
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: $(MY_POD_NAME).$(K8S_SERVICE_NAME)
            - name: SHARED_FILE
              value: "/shared/info.txt"
            - name: MONGODB_USERNAME
              value: pxbackup
            - name: MONGODB_DATABASE
              value: px-backup
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: pxc-backup-mongodb-trial
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-root-password
                  name: pxc-backup-mongodb-trial
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  key: mongodb-replica-set-key
                  name: pxc-backup-mongodb-trial
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - containerPort: 27017
              name: mongodb
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - db.adminCommand('ping')
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - bash
              - -ec
              - |
                mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /bitnami/mongodb
              name: pxc-mongodb-data
            - mountPath: /scripts/setup.sh
              name: scripts
              subPath: setup.sh
      volumes:
        - name: scripts
          configMap:
            defaultMode: 493
            name: pxc-backup-mongodb-trial-scripts
  volumeClaimTemplates:
    - metadata:
        name: pxc-mongodb-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 64Gi
        storageClassName: mysql-sc

