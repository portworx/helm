{{/* Setting defaults if they are omitted. */}}
{{- $isOpenshiftCluster := .Capabilities.APIVersions.Has "apps.openshift.io/v1" -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: pxcentral-apiserver
{{- include "px-backup.labels" . | nindent 4 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: pxcentral-apiserver
{{- include "px-backup.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "update", "create", "patch"]
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["delete", "get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["patch", "update"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims", "persistentvolumes"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "update", "create", "patch"]
- apiGroups: ["extensions"]
  resources: ["ingresses", "ingresses/status", "networkpolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "statefulsets", "deployments/status", "statefulsets/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "ingresses/status", "networkpolicies"]
  verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: pxcentral-apiserver
{{- include "px-backup.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: pxcentral-apiserver
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app: pxcentral-apiserver
    app.kubernetes.io/component: pxcentral-apiserver
{{- include "px-backup.labels" . | nindent 4 }}
spec:
  selector:
    app: pxcentral-apiserver
  ports:
    - name: pxcentral-grpc
      protocol: TCP
      port: 10005
      targetPort: 10005
    - name: pxcentral-rest
      protocol: TCP
      port: 10006
      targetPort: 10006
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pxcentral-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: pxcentral-apiserver
{{- include "px-backup.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: pxcentral-apiserver
      app.kubernetes.io/component: pxcentral-apiserver
  replicas: 1
  minReadySeconds: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pxcentral-apiserver
        app.kubernetes.io/component: pxcentral-apiserver
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pxbackup/enabled
                operator: NotIn
                values:
                - "false"
      containers:
      - name: pxcentral-apiserver
        image: {{ printf "%s/%s/%s:%s" .Values.images.pxcentralApiServerImage.registry .Values.images.pxcentralApiServerImage.repo .Values.images.pxcentralApiServerImage.imageName .Values.images.pxcentralApiServerImage.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        env:
          - name: PXC_NAMESPACE
            value: {{ .Release.Namespace }}
          {{- if .Values.caCertsSecretName }}
          - name: SSL_CERT_DIR
            value: /tmp/certs
          {{- end }}
        readinessProbe:
          httpGet:
            path: /v1/ping
            port: 10006
          initialDelaySeconds: 10
          timeoutSeconds: 120
          periodSeconds: 20
        ports:
          - name: pxcentral-grpc
            containerPort: 10005
          - name: pxcentral-rest
            containerPort: 10006
        {{- if .Values.caCertsSecretName }}
        volumeMounts:
          - mountPath: /tmp/certs
            readOnly: true
            name: ssl-cert-dir
        {{- end }}
        command:
        - /pxcentral-onprem
        - start
      {{- if .Values.caCertsSecretName }}
      volumes:
        - name: ssl-cert-dir
          secret:
            defaultMode: 420
            secretName: "{{ .Values.caCertsSecretName }}"
      {{- end }}
      {{- if .Values.images.pullSecrets }}
      imagePullSecrets:
        {{- range $sec := .Values.images.pullSecrets }}
        - name: {{ $sec | quote }}
        {{- end }}
      {{- end }}
      {{- if $isOpenshiftCluster}}
      {{- else }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      serviceAccountName: pxcentral-apiserver
      restartPolicy: Always