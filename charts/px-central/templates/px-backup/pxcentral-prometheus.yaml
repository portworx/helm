{{- $isOpenshiftCluster := .Capabilities.APIVersions.Has "apps.openshift.io/v1" -}}
{{- $deployDedicatedMonitoringSystem := .Values.pxbackup.deployDedicatedMonitoringSystem | default true }}
{{- $pxMonitorEnabled := .Values.pxmonitor.enabled | default false }}
{{- if eq $deployDedicatedMonitoringSystem true }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pxc-prometheus-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: pxc-prometheus-operator
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pxc-prometheus-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pxc-prometheus-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
rules:
  - apiGroups:
      - extensions
    resources:
      - thirdpartyresources
    verbs: ["*"]
  - apiGroups:
      - apiextensions.k8s.io
    resources:
        - customresourcedefinitions
    verbs: ["*"]
  - apiGroups:
      - monitoring.coreos.com
    resources:
        - alertmanagers
        - alertmanagers/status
        - alertmanagers/finalizers
        - prometheuses
        - prometheuses/finalizers
        - prometheuses/status
        - servicemonitors
        - prometheusrules
        - podmonitors
        - thanosrulers
        - alertmanagerconfigs
        - probes
    verbs: ["*"]
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs: ["*"]
  - apiGroups: [""]
    resources:
      - configmaps
      - secrets
    verbs: ["*"]
  - apiGroups: [""]
    resources:
      - pods
    verbs: ["list", "delete"]
  - apiGroups: [""]
    resources:
      - services
      - endpoints
    verbs: ["get", "create", "update"]
  - apiGroups: [""]
    resources:
      - nodes
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - namespaces
    verbs: ["list", "watch", "get"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pxc-prometheus-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: prometheus-operator
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
  name: prometheus-operator
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: prometheus-operator
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: prometheus-operator
    spec:
      containers:
      - args:
          - -namespaces={{ .Release.Namespace }}
          - --kubelet-service={{ .Release.Namespace }}/kubelet
          - --prometheus-config-reloader={{ printf "%s/%s/%s:%s" .Values.images.pxBackupPrometheusConfigReloaderImage.registry .Values.images.pxBackupPrometheusConfigReloaderImage.repo .Values.images.pxBackupPrometheusConfigReloaderImage.imageName .Values.images.pxBackupPrometheusConfigReloaderImage.tag }}
        image: {{ printf "%s/%s/%s:%s" .Values.images.pxBackupPometheusOperatorImage.registry .Values.images.pxBackupPometheusOperatorImage.repo .Values.images.pxBackupPometheusOperatorImage.imageName .Values.images.pxBackupPometheusOperatorImage.tag }}
        name: prometheus-operator
        ports:
          - containerPort: 8080
            name: http
        {{- if $isOpenshiftCluster }}
        {{- else }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      serviceAccountName: pxc-prometheus-operator
      {{- if .Values.images.pullSecrets }}
      imagePullSecrets:
          {{- range $sec := .Values.images.pullSecrets }}
          - name: {{ $sec | quote }}
          {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: px-backup-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  - /federate
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: px-backup-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: px-backup-prometheus
subjects:
- kind: ServiceAccount
  name: px-backup-prometheus
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: px-backup-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: web
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    prometheus: px-backup-prometheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: px-backup-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}


---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
   name: px-backup-prometheus
   namespace: {{ .Release.Namespace }}
spec:
  additionalAlertManagerConfigs:
    key: am-configs.yaml
    name: pxc-backup-metrics
  {{- if .Values.persistentStorage.storageClassName }}
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: {{ .Values.persistentStorage.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistentStorage.prometheus.storage }}
  {{- end }}
  containers:
  - args:
    - --web.console.templates=/etc/prometheus/consoles
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --storage.tsdb.retention.time={{ .Values.pxbackup.prometheus.retention }}
    - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
    - --storage.tsdb.path=/prometheus
    - --web.enable-lifecycle
    - --web.route-prefix=/
    - --log.level=debug
    - --web.config.file=/etc/prometheus/web_config/web-config-custom.yaml
    env:
    - name: AUTH_SECRET
      valueFrom:
        secretKeyRef:
          name: pxc-backup-metrics
          key: metrics-token
    image: {{ printf "%s/%s/%s:%s" .Values.images.pxBackupPrometheusImage.registry .Values.images.pxBackupPrometheusImage.repo .Values.images.pxBackupPrometheusImage.imageName .Values.images.pxBackupPrometheusImage.tag }}
    livenessProbe:
      exec:
        command:
        - sh
        - -c
        - wget http://localhost:9090/-/healthy --header="Authorization:Basic $AUTH_SECRET"
          -qO-
    name: prometheus
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - wget http://localhost:9090/-/ready --header="Authorization:Basic $AUTH_SECRET"
          -qO-
    startupProbe:
      exec:
        command:
        - sh
        - -c
        - wget http://localhost:9090/-/ready --header="Authorization:Basic $AUTH_SECRET"
          -qO-
    ports:
    - containerPort: 9090
      name: web
      protocol: TCP
  - args:
    - --listen-address=:8080
    - --reload-url=http://$(USERNAME):$(PASSWORD)@localhost:9090/-/reload
    - --config-file=/etc/prometheus/config/prometheus.yaml.gz
    - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
    - --watched-dir=/etc/prometheus/rules/prometheus-px-backup-prometheus-rulefiles-0
    - --log-level=debug
    name: config-reloader
    env:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          key: metrics-username
          name: pxc-backup-metrics
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          key: metrics-password
          name: pxc-backup-metrics
    ports:
    - containerPort: 8080
      name: reloader-web
      protocol: TCP
  {{- if $isOpenshiftCluster }}
  {{- else }}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  {{- end }}
  logLevel: debug
  listenLocal: true
  volumeMounts:
    - mountPath: /etc/prometheus/web_config/web-config-custom.yaml
      name: web-config-custom
      readOnly: true
      subPath: web-config-custom.yaml
  volumes:
    - name: web-config-custom
      secret:
        defaultMode: 420
        secretName: pxc-backup-metrics
  replicas: {{ .Values.pxbackup.prometheus.replicas }}
  evaluationInterval: 30s
  scrapeInterval: 30s
  ruleSelector:
    matchLabels:
      app: px-backup-alerts
  serviceAccountName: px-backup-prometheus
  {{- if .Values.images.pullSecrets }}
  imagePullSecrets:
    {{- range $sec := .Values.images.pullSecrets }}
    - name: {{ $sec | quote }}
    {{- end }}
  {{- end }}
  serviceMonitorSelector:
    matchLabels:
      name: px-backup-prometheus-sm
  {{- with .Values.tolerations }}
  tolerations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end}}

{{- if (or (eq $deployDedicatedMonitoringSystem true) (eq $pxMonitorEnabled true))}}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: pxc-backup-metrics
{{- include "px-central.labels" . | nindent 4 }}
  name: pxc-backup-metrics
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  metrics-token: "YWRtaW46ZTFacEtheTczTnVW"
  metrics-username: admin
  metrics-password: e1ZpKay73NuV
  web-config-custom.yaml: |
    basic_auth_users:
      admin: $2a$12$EUVIFCn0M6cGdR612WlqSOFkj48VkxxlK.ElcgTZUjroOauS6MH3C
  {{- if eq $deployDedicatedMonitoringSystem true }}
  am-configs.yaml: |
    - path_prefix: /
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - {{ .Release.Namespace }}
      basic_auth:
        username: admin
        password: e1ZpKay73NuV
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_service_name
        regex: alertmanager-operated
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: web
  {{- end }}
{{- end}}

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: {{ .Release.Namespace }}
  name: px-backup-prometheus-sm
  labels:
    name: px-backup-prometheus-sm
    app.kubernetes.io/component: px-backup
{{- include "px-central.labels" . | nindent 4 }}
spec:
  endpoints:
  - metricRelabelings:
    - action: labeldrop
      regex: (instance|pod)
    port: rest-api
    targetPort: 10001
  namespaceSelector:
    any: true
  selector:
    matchLabels:
      app: px-backup

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: px-backup-alerts
  name: px-backup-prometheus-rules
spec:
  groups:
  - name: gauge_rules
    rules:
    - alert: ClusterAlert
      annotations:
        description: {{`The Cluster {{ $labels.name
          }} failed.`}}
        summary: Cluster addition failed
      expr: pxbackup_cluster_status == 5
      for: 1m
      labels:
        severity: critical

    - alert: BackupAlert
      annotations:
        description: {{`The Backup {{ $labels.name
          }} failed.`}}
        summary: Backup failed
      expr: pxbackup_backup_status == 4
      for: 1m
      labels:
        severity: critical

    - alert: RestoreAlert
      annotations:
        description: {{`The Restore {{ $labels.name
          }} failed.`}}
        summary: Restoring backup failed 
      expr: pxbackup_restore_status == 4
      for: 1m
      labels:
        severity: critical

    - alert: BackupLocationAlert
      annotations:
        description: {{`The Backup Location {{ $labels.name
          }} failed.`}}
        summary: BackupLocation addition failed
      expr: pxbackup_backuplocation_status == 4
      for: 1m
      labels:
        severity: critical
