persistentStorage:
  enabled: true
  storageClassName:
  cassandra:
    storage: 64Gi
  grafana:
    storage: 20Gi
  consul:
    storage: 8Gi
  alertManager:
    storage: 2Gi
  ingester:
    storage: 2Gi
  prometheus:
    storage: 5Gi
    retentionSize: 4600MB
  mysqlVolumeSize: "100Gi"
  mongodbVolumeSize: "64Gi"
  mongoCacheSize: 4
  keycloakThemeVolumeSize: "5Gi"
  keycloakBackendVolumeSize: "10Gi"

storkRequired: false
nodeAffinityLabel: ""
podAntiAffinity: false

pxcentralDBPassword: Password1
caCertsSecretName: ""

oidc:
  centralOIDC:
    enabled: true
    defaultUsername: admin
    defaultPassword: admin
    defaultEmail: admin@portworx.com
    keyCloakBackendUserName: keycloak
    keyCloakBackendPassword: keycloak
    clientId: "pxcentral"
    updateAdminProfile: true

  externalOIDC:
    enabled: false
    clientID:
    clientSecret:
    endpoint:

postInstallJob:
  sslEnabled: true

pxbackup:
  enabled: false
  orgName: default
  callHome: true
  mongoMigration: complete
  livenessProbeInitialDelay: 1800
  prometheus:
    replicas: 2
    retention: 90d
  alertmanager:
    replicas: 2
    retention: 2208h
  nfs:
    enabled: true
  deployDedicatedMonitoringSystem: true
  prometheusEndpoint: ""
  alertmanagerEndpoint: ""
  prometheusSecretName: ""
  alertmanagerSecretName: ""
  usePxBackupEmailAlertTemplate: true
  alertSeverity:
    clusterAlert: ""
    backupAlert: ""
    restoreAlert: ""
    backupLocationAlert: ""

pxlicenseserver:
  enabled: false
  internal:
    enabled: true
    lsTypeUAT: false
    lsTypeAirgapped: false
  external:
    enabled: false
  mainNodeIP: ""
  backupNodeIP: ""
  adminUserName: admin
  adminUserPassword: Adm1n!Ur

pxmonitor:
  enabled: false
  pxCentralEndpoint:
  sslEnabled: false
  oidcClientID: pxcentral
  consulBindInterface: ""
  cortex:
    alertmanager:
      advertiseAddress: ""

service:
  pxCentralUIServiceType: "LoadBalancer"
  ## To set the LoadBalancer service type to internal only
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  pxCentralUIServiceAnnotations: {}
  pxBackupUIServiceType: "LoadBalancer"
  pxBackupUIServiceAnnotations: {}
  grafanaServiceType: "NodePort"
  cortexNginxServiceType: "NodePort"

## Memory settings: These are calculated automatically unless specified otherwise
## To run on environments with little resources (<= 8GB), tune your heap settings:
## maxHeapSize:
## - calculate 1/2 ram and cap to 1024MB
## - calculate 1/4 ram and cap to 8192MB
## - pick the max
## newHeapSize:
## A good guideline is 100 MB per CPU core.
## - min(100 * num_cores, 1/4 * heap size)
##
# maxHeapSize: 4G
# newHeapSize: 800M

cassandra:
  jvm:
    maxHeapSize:
    newHeapSize:

installCRDs: false
clusterDomain: "cluster.local"
cassandraUsername: cassandra
cassandraPassword: cassandra

operatorToChartUpgrade: false

securityContext:
  runAsUser: 1000
  fsGroup: 1000
  runAsNonRoot: true

## sample toleration while installing from values.yaml
# tolerations:
# - effect: NoSchedule
#   key: key1
#   operator: Exists
#
## sample toleration while setting the param inline
# --set 'tolerations[0].operator=Exists,tolerations[0].effect=NoSchedule,tolerations[0].key=key1'
# ensure toleration param is enclosed with single quotes
tolerations: []

images:
  pullSecrets:
    - docregistry-secret
  pullPolicy: Always

  pxcentralApiServerImage:
    registry: docker.io
    repo: portworx
    imageName: pxcentral-onprem-api
    tag: 2.7.1
  pxcentralFrontendImage:
    registry: docker.io
    repo: portworx
    imageName: pxcentral-onprem-ui-frontend
    tag: 2.7.1
  pxcentralBackendImage:
    registry: docker.io
    repo: portworx
    imageName: pxcentral-onprem-ui-backend
    tag: 2.7.1
  pxcentralMiddlewareImage:
    registry: docker.io
    repo: portworx
    imageName: pxcentral-onprem-ui-lhbackend
    tag: 2.7.1
  postInstallSetupImage:
    registry: docker.io
    repo: portworx
    imageName: pxcentral-onprem-post-setup
    tag: 2.7.1
  keycloakBackendImage:
    registry: docker.io
    repo: portworx
    imageName: postgresql
    tag: 11.19.0-debian-11-r1
  keycloakFrontendImage:
    registry: docker.io
    repo: portworx
    imageName: keycloak
    tag: 21.1.1
  keycloakLoginThemeImage:
    registry: docker.io
    repo: portworx
    imageName: keycloak-login-theme
    tag: 2.7.0
  keycloakInitContainerImage:
    registry: docker.io
    repo: portworx
    imageName: busybox
    tag: 1.35.0
  mysqlImage:
    registry: docker.io
    repo: portworx
    imageName: mysql
    tag: 5.7.44

  ## Images required for enabling px-backup
  pxBackupImage:
    registry: docker.io
    repo: portworx
    imageName: px-backup
    tag: 2.7.1
  mongodbImage:
    registry: docker.io
    repo: portworx
    imageName: mongodb
    tag: 5.0.24-debian-11-r0

  ## Images required for enabling px-license-server
  licenseServerImage:
    registry: docker.io
    repo: portworx
    imageName: px-els
    tag: 2.3.2

  ## Images required for enabling px-monitor
  cortexImage:
    registry: docker.io
    repo: portworx
    imageName: cortex
    tag: v1.13.1
  cassandraImage:
    registry: docker.io
    repo: portworx
    imageName: cassandra
    tag: 4.0.7-debian-11-r34
  proxyConfigImage:
    registry: docker.io
    repo: portworx
    imageName: nginx
    tag: 1.23.3-alpine-slim
  consulImage:
    registry: docker.io
    repo: portworx
    imageName: consul
    tag: 1.14.4-debian-11-r4
  dnsmasqImage:
    registry: docker.io
    repo: portworx
    imageName: go-dnsmasq
    tag: release-1.0.7-v3
  grafanaImage:
    registry: docker.io
    repo: portworx
    imageName: grafana
    tag: 9.1.3
  prometheusImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus
    tag: v2.35.0
  pxBackupPrometheusImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus
    tag: v2.48.0
  pxBackupAlertmanagerImage:
    registry: docker.io
    repo: portworx
    imageName: alertmanager
    tag: v0.26.0
  pxBackupPrometheusOperatorImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus-operator
    tag: v0.70.0
  pxBackupPrometheusConfigReloaderImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus-config-reloader
    tag: v0.70.0
  prometheusConfigReloadrImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus-config-reloader
    tag: v0.56.3
  prometheusOperatorImage:
    registry: docker.io
    repo: portworx
    imageName: prometheus-operator
    tag: v0.56.3
  memcachedMetricsImage:
    registry: docker.io
    repo: portworx
    imageName: memcached-exporter
    tag: v0.10.0
  memcachedIndexImage:
    registry: docker.io
    repo: portworx
    imageName: memcached
    tag: 1.6.17-alpine
  memcachedImage:
    registry: docker.io
    repo: portworx
    imageName: memcached
    tag: 1.6.17-alpine
